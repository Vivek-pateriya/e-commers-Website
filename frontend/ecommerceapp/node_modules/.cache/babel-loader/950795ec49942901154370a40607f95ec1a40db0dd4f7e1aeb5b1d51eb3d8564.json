{"ast":null,"code":"var _jsxFileName = \"E:\\\\BalramSircode\\\\Project\\\\e-commers-Website\\\\frontend\\\\ecommerceapp\\\\src\\\\productView\\\\ProductList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Cart from './cart.png';\nimport ReactDOM from 'react-dom/client';\nimport '../index.css';\nimport Bill from '../customer/bill';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ProductList(props) {\n  _s();\n  const [itemCount, setItemCount] = useState(0);\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [productCategories, setProductCategories] = useState([]);\n  const [products, setProducts] = useState([]);\n\n  // Fetch product and category lists on component mount\n  useEffect(() => {\n    axios.get('http://localhost:9679/product/showproduct').then(res => {\n      setProducts(res.data);\n    }).catch(err => {\n      alert(err.message);\n    });\n    axios.get('http://localhost:9679/productCat/show').then(res => {\n      setProductCategories(res.data);\n      console.log(productCategories);\n    }).catch(err => {\n      alert(err.message);\n    });\n  }, []);\n  const handleBuyButton = productId => {\n    // Find the product to add\n    const product = products.find(item => item.pid === productId);\n    if (product) {\n      setSelectedItems(prevItems => [...prevItems, product]);\n      setItemCount(prevCount => prevCount + 1);\n    }\n  };\n  const handleCheckButton = () => {\n    const root = ReactDOM.createRoot(document.getElementById('root'));\n    const {\n      data: customerId\n    } = props;\n    const billData = {\n      selectedItems,\n      customerId\n    };\n\n    // Assuming you have a Bill component to render\n    root.render( /*#__PURE__*/_jsxDEV(Bill, {\n      data: billData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this));\n  };\n  const getCategoryName = categoryId => {\n    // Find the category object that matches the given categoryId\n    const category = productCategories.find(citem => citem.productId === categoryId);\n\n    // If category is found, return the category name, otherwise return 'Unknown'\n    return category ? category.pcatgname : 'Unknown';\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"center\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n        children: [\"Customer ID: \", props.data]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: Cart,\n          alt: \"Cart\",\n          height: 50,\n          width: 50\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"\",\n          children: [\"Items: \", itemCount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleCheckButton,\n          children: \"Checkout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mydiv\",\n        children: products.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card\",\n          style: {\n            width: \"18rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `http://localhost:9679/product/getproductimage/${item.ppicname}`,\n            alt: item.pname,\n            width: 100,\n            height: 100,\n            className: \"card-img-top\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: item.pname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card-text\",\n              children: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"list-group list-group-flush\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item\",\n              children: \"An item\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item\",\n              children: \"A second item\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item\",\n              children: \"A third item\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              class: \"card-link\",\n              children: \"Card link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              class: \"card-link\",\n              children: \"Another link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this)]\n        }, item.pid, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(ProductList, \"bV/bFAZXjpPswMWk5S4+fQj4eNo=\");\n_c = ProductList;\nexport default ProductList;\nvar _c;\n$RefreshReg$(_c, \"ProductList\");","map":{"version":3,"names":["React","useEffect","useState","axios","Cart","ReactDOM","Bill","jsxDEV","_jsxDEV","Fragment","_Fragment","ProductList","props","_s","itemCount","setItemCount","selectedItems","setSelectedItems","productCategories","setProductCategories","products","setProducts","get","then","res","data","catch","err","alert","message","console","log","handleBuyButton","productId","product","find","item","pid","prevItems","prevCount","handleCheckButton","root","createRoot","document","getElementById","customerId","billData","render","fileName","_jsxFileName","lineNumber","columnNumber","getCategoryName","categoryId","category","citem","pcatgname","children","src","alt","height","width","htmlFor","type","onClick","className","map","class","style","ppicname","pname","href","_c","$RefreshReg$"],"sources":["E:/BalramSircode/Project/e-commers-Website/frontend/ecommerceapp/src/productView/ProductList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Cart from './cart.png';\r\nimport ReactDOM from 'react-dom/client';\r\nimport '../index.css';\r\nimport Bill from '../customer/bill';\r\nfunction ProductList(props) {\r\n  const [itemCount, setItemCount] = useState(0);\r\n  const [selectedItems, setSelectedItems] = useState([]);\r\n  const [productCategories, setProductCategories] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n\r\n  // Fetch product and category lists on component mount\r\n  useEffect(() => {\r\n    axios.get('http://localhost:9679/product/showproduct')\r\n      .then((res) => {\r\n        setProducts(res.data);\r\n      })\r\n      .catch(err => {\r\n        alert(err.message);\r\n      });\r\n\r\n    axios.get('http://localhost:9679/productCat/show')\r\n      .then((res) => {\r\n        setProductCategories(res.data);\r\n        console.log(productCategories);\r\n\r\n      })\r\n      .catch(err => {\r\n        alert(err.message);\r\n      });\r\n  }, []);\r\n\r\n  const handleBuyButton = (productId) => {\r\n    // Find the product to add\r\n    const product = products.find(item => item.pid === productId);\r\n\r\n    if (product) {\r\n      setSelectedItems(prevItems => [...prevItems, product]);\r\n      setItemCount(prevCount => prevCount + 1);\r\n    }\r\n  };\r\n\r\n  const handleCheckButton = () => {\r\n    const root = ReactDOM.createRoot(document.getElementById('root'));\r\n    const { data: customerId } = props;\r\n\r\n    const billData = {\r\n      selectedItems,\r\n      customerId\r\n    };\r\n\r\n    // Assuming you have a Bill component to render\r\n    root.render(<Bill data={billData} />);\r\n  };\r\n\r\n  const getCategoryName = (categoryId) => {\r\n    // Find the category object that matches the given categoryId\r\n    const category = productCategories.find(citem => citem.\r\n      productId === categoryId);\r\n\r\n    // If category is found, return the category name, otherwise return 'Unknown'\r\n    return category ? category.pcatgname : 'Unknown';\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <center>\r\n        <h6>Customer ID: {props.data}</h6>\r\n        <div>\r\n          <img src={Cart} alt=\"Cart\" height={50} width={50} />\r\n          <label htmlFor=\"\">Items: {itemCount}</label>\r\n          <button type='button' onClick={handleCheckButton}>Checkout</button>\r\n        </div>\r\n        <div className='mydiv'>\r\n          {/* <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Id</th>\r\n                <th>Product Name</th>\r\n                <th>Price</th>\r\n                <th>Offer Price</th>\r\n                <th>Category Name</th>\r\n                <th>Photo</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((item) => (\r\n                <tr key={item.pid}>\r\n                  <td>{item.pid}</td>\r\n                  <td>{item.pname}</td>\r\n                  <td>{item.pprice}</td>\r\n                  <td>{item.oprice}</td>\r\n                  <td>{getCategoryName(item.pcatgid)}</td>\r\n                  <td>\r\n                    <img src={`http://localhost:9679/product/getproductimage/${item.ppicname}`} alt={item.pname} width={100} height={100} />\r\n                  </td>\r\n                  <td>\r\n                    <button type=\"button\" onClick={() => handleBuyButton(item.pid)}>Buy</button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table> */}\r\n          {\r\n            products.map((item) => (\r\n              <div class=\"card\" style={{ width: \"18rem\" }} key={item.pid}>\r\n                <img src={`http://localhost:9679/product/getproductimage/${item.ppicname}`} alt={item.pname} width={100} height={100} className=\"card-img-top\" />\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">{item.pname}</h5>\r\n                  <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n                </div>\r\n                <ul className=\"list-group list-group-flush\">\r\n                  <li className=\"list-group-item\">An item</li>\r\n                  <li className=\"list-group-item\">A second item</li>\r\n                  <li className=\"list-group-item\">A third item</li>\r\n                </ul>\r\n                <div className=\"card-body\">\r\n                  <a href=\"#\" class=\"card-link\">Card link</a>\r\n                  <a href=\"#\" class=\"card-link\">Another link</a>\r\n                </div>\r\n              </div>\r\n            ))\r\n          }\r\n        </div>\r\n      </center>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProductList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}